name: 'WF_Disp_input'

env:
  platform: nonlive
  path: workflows/test4.yml
  Workflow_name: WF_Disp_input
  #Badge: "![](https://github.com/OttoPaymentHub/barracuda_partner_accounting/workflows/${Workflow_name}/badge.svg?branch=${GITHUB_REF#refs/heads/}&event=${GITHUB_EVENT_NAME})"


on:
  workflow_dispatch:
    inputs:
      git-ref: 
        description: Git Ref (Optional)    
        required: false
      environment:
        description: Environment to run this workflow on   
        required: true
        default: 'stage'
  push:
    branch:
      - feature
      - master
jobs:
  createtest: 
    runs-on: ubuntu-latest
    # strategy: 
    #   matrix: 
    #     environment: ["nonlive"]    
    steps:
      - name: Test variables
        run: |
            echo "The current path is" ${path}
            echo "The current environment is" ${platform}
            echo "The current environment is" $platform
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: Check For Changes
        uses: marceloprado/has-changed-path@v1
        id: changed-front
        with:
          paths: ./.github/${{ env.path }}
      - name: Print Env name
        if: steps.changed-front.outputs.changed == 'true' && env.platform == 'nonlive'
        run: |
            echo "The current environment is" ${platform}
            echo "The current environment is" $platform 
      - name: Test Badges
        run: |
            echo "Testing badges"
            echo ${{ env.Worrkflow_name }}
            echo ${GITHUB_REF#refs/heads/}
            echo ${GITHUB_EVENT_NAME}
            sh ./badges.sh "${{ env.Worrkflow_name }}" "${GITHUB_REF#refs/heads/}" "${GITHUB_EVENT_NAME}"
      - name: Alternative
        run: |
          ls -al 
          Badge="![](https://github.com/OttoPaymentHub/barracuda_partner_accounting/workflows/${Workflow_name}/badge.svg?branch=${GITHUB_REF#refs/heads/}&event=${GITHUB_EVENT_NAME})"
          Job_Status="${Workflow_name} | ${GITHUB_REF#refs/heads/} | ${GITHUB_EVENT_NAME} | ${Badge}"
          echo "${Job_Status}"
          echo "${Badge}"
          echo "${GITHUB_EVENT_NAME}"
          echo "$Job_Status" >> ./README.md
          cat ./README.md
  Livetest: 
    runs-on: ubuntu-latest    
    steps: 
      - name: Print Live Env.
        if: github.event.inputs.environment == 'stage'
        #steps.changed-front.outputs.changed == 'true' && ${{ github.event.inputs.var }} == live
        run: |
            echo "Hello World!"
            echo "The current environment is" ${{ github.event.inputs.environment }}